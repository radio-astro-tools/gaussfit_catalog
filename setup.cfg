[metadata]
name = gaussfit_catalog
package_name = gaussfit_catalog
description = Fit Gaussians to each entry in a catalog
author = Adam Ginsburg & radio-astr-tools developers
author_email = adam.g.ginsburg@gmail.com
license = BSD
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://github.com/radio-astro-tools/gaussfit_catalog
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = True
github_project = radio-astro-tools/gaussfit_catalog
install_requires = astropy
# version should be PEP440 compatible (http://www.python.org/dev/peps/pep-0440)
version = 0.1.dev

[options]
zip_safe = False
packages = find:
python_requires = >=3.7
setup_requires = setuptools_scm
install_requires =
    astropy
    spectral-cube
    radio-beam


[options.extras_require]
test =
    pytest-astropy
docs =
    sphinx-astropy

[options.package_data]
gaussfit_catalog = data/*

[tool:pytest]
testpaths = "gaussfit_catalog" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit =
    gaussfit_catalog/_astropy_init*
    gaussfit_catalog/conftest.py
    gaussfit_catalog/*setup_package*
    gaussfit_catalog/tests/*
    gaussfit_catalog/*/tests/*
    gaussfit_catalog/extern/*
    gaussfit_catalog/version*
    */gaussfit_catalog/_astropy_init*
    */gaussfit_catalog/conftest.py
    */gaussfit_catalog/*setup_package*
    */gaussfit_catalog/tests/*
    */gaussfit_catalog/*/tests/*
    */gaussfit_catalog/extern/*
    */gaussfit_catalog/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
